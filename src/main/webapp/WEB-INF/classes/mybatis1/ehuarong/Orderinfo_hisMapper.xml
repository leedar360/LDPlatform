<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Orderinfo_hisMapper">
	
	<!--表名 -->
	<sql id="tableName">
		HR_ORDERINFO_HIS
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		ORDERINFO_ID,
		ODER_ID,	
		GOODNUM,	
		SELLNAME,	
		SELLPHONE,	
		RECNAME,	
		RECPHONE,	
		RECADDRESS,	
		EXPRESS,	
		EXPRESSNO,	
		SELLPRICE,	
		SELLTOTALPRICE,	
		PURCHASEPRICE,	
		PURCHASETOTALPRICE,	
		PLATFORMID,	
		SUPPLIER_ID,	
		SUPPLIERNAME,	
		SUPPLIER_EMAIL,	
		CREATETIME,	
		REMARK,	
		EXTGOOD_ID,	
		STATUS,	
		EXTGOODS_NAME,	
		SUPPLYGOOD_NAME

	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">

		#{ORDERINFO_ID},	
		#{ODER_ID},	
		#{GOODNUM},	
		#{SELLNAME},	
		#{SELLPHONE},	
		#{RECNAME},	
		#{RECPHONE},	
		#{RECADDRESS},	
		#{EXPRESS},	
		#{EXPRESSNO},	
		#{SELLPRICE},	
		#{SELLTOTALPRICE},	
		#{PURCHASEPRICE},	
		#{PURCHASETOTALPRICE},	
		#{PLATFORMID},	
		#{SUPPLIER_ID},	
		#{SUPPLIERNAME},	
		#{SUPPLIER_EMAIL},	
		#{CREATETIME},	
		#{REMARK},	
		#{EXTGOOD_ID},	
		#{STATUS},	
		#{EXTGOODS_NAME},	
		#{SUPPLYGOOD_NAME},
		#{BATCHNO},
		#{SYSTIME}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			ORDERINFO_ID = #{ORDERINFO_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			ODER_ID = #{ODER_ID},
			GOODNUM = #{GOODNUM},
			SELLNAME = #{SELLNAME},
			SELLPHONE = #{SELLPHONE},
			RECNAME = #{RECNAME},
			RECPHONE = #{RECPHONE},
			RECADDRESS = #{RECADDRESS},
			EXPRESS = #{EXPRESS},
			EXPRESSNO = #{EXPRESSNO},
			SELLPRICE = #{SELLPRICE},
			SELLTOTALPRICE = #{SELLTOTALPRICE},
			PURCHASEPRICE = #{PURCHASEPRICE},
			PURCHASETOTALPRICE = #{PURCHASETOTALPRICE},
			PLATFORMID = #{PLATFORMID},
			SUPPLIER_ID = #{SUPPLIER_ID},
			SUPPLIERNAME = #{SUPPLIERNAME},
			SUPPLIER_EMAIL = #{SUPPLIER_EMAIL},
			REMARK = #{REMARK},
			EXTGOOD_ID = #{EXTGOOD_ID},
			STATUS = #{STATUS},
			EXTGOODS_NAME = #{EXTGOODS_NAME},
			SUPPLYGOOD_NAME = #{SUPPLYGOOD_NAME},
		where
		ORDERINFO_ID = #{ORDERINFO_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			ORDERINFO_ID = #{ORDERINFO_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.EXTGOOD_ID!= null and pd.EXTGOOD_ID != ''"><!-- 关键词检索 -->
			and EXTGOOD_ID = #{pd.EXTGOOD_ID}
		</if>

		<if test="pd.lastStart!= null and pd.lastStart != '' and pd.lastEnd!= null and pd.lastEnd != ''" >
			and (CREATETIME  BETWEEN #{pd.lastStart} AND #{pd.lastEnd}  )
		</if>

		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			ODER_ID  LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			OR
			EXTGOODS_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			OR
			EXTGOOD_ID LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			OR
			SUPPLYGOOD_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			OR
			RECNAME  LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			OR
			RECPHONE   LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			OR
			RECADDRESS  LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			OR
			EXPRESSNO   LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')

			)
		</if>
		ORDER BY SYSTIME, CREATETIME DESC
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			ORDERINFO_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>